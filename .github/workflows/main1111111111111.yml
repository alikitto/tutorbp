name: MySQL Backup to Cloudflare R2

on:
  schedule:
    - cron: "0 0 * * *"   # каждый день в 00:00 UTC
  workflow_dispatch:       # возможность запускать вручную

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install MySQL Client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update

      - name: Debug ENV
        run: |
          echo "DB_HOST=$DB_HOST"
          echo "DB_PORT=$DB_PORT"
          echo "DB_USER=$DB_USER"
          echo "DB_NAME=$DB_NAME"
          echo "R2_ACCOUNT_ID=$R2_ACCOUNT_ID"
          echo "S3_BUCKET=$S3_BUCKET"
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_NAME: ${{ secrets.DB_NAME }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}

      - name: Dump MySQL and Upload to R2
        run: |
          FILENAME="db_backup_$(date +'%Y-%m-%d_%H-%M-%S').sql.gz"
          echo ">>> Dumping database to $FILENAME"
          mysqldump -h $DB_HOST -P $DB_PORT -u $DB_USER -p$DB_PASS $DB_NAME | gzip > $FILENAME

          echo ">>> Uploading to Cloudflare R2..."
          aws s3 cp $FILENAME s3://$S3_BUCKET/$FILENAME --endpoint-url https://$R2_ACCOUNT_ID.r2.cloudflarestorage.com
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
